const { Sequelize } = require('sequelize');
require('dotenv').config();

let sequelize;

// Verificar si tenemos una URL de base de datos (para producción en Render)
if (process.env.DATABASE_URL) {
  console.log('Usando DATABASE_URL para la conexión');
  
  // Usar URL de conexión directamente (formato usado por Render)
  sequelize = new Sequelize(process.env.DATABASE_URL, {
    dialect: 'postgres',
    protocol: 'postgres',
    dialectOptions: {
      ssl: {
        require: true,
        rejectUnauthorized: false // Para permitir conexiones a bases de datos con certificados auto-firmados
      }
    },
    logging: false,
    pool: {
      max: 5,
      min: 0,
      acquire: 30000,
      idle: 10000
    }
  });
} else {
  // Verificar que todas las variables de entorno necesarias están definidas
  if (!process.env.DB_NAME || !process.env.DB_HOST) {
    console.error('Las variables de entorno para la base de datos no están configuradas correctamente');
  }

  // Conexión para desarrollo local - puede ser MySQL o PostgreSQL
  sequelize = new Sequelize(
    process.env.DB_NAME,
    process.env.DB_USER,
    process.env.DB_PASSWORD,
    {
      host: process.env.DB_HOST,
      dialect: process.env.DB_DIALECT || 'mysql',
      port: process.env.DB_PORT || 3306,
      logging: false,
      pool: {
        max: 5,
        min: 0,
        acquire: 30000,
        idle: 10000
      }
    }
  );
}

// Test the connection
sequelize.authenticate()
  .then(() => {
    console.log('Conexión a la base de datos establecida con éxito.');
  })
  .catch(err => {
    console.error('No se pudo conectar a la base de datos:', err);
  });

module.exports = sequelize;
